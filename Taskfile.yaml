# SPDX-License-Identifier: AGPL-3.0-or-later

---

version: "3"

set: [errexit, pipefail, nounset]
shopt: [globstar]

dotenv: [".env.local", ".env"]

includes:
  vm: 
    taskfile: taskfiles/Dev.yaml
    dir: .

tasks:
  init:
    silent: true
    run: "once"
    desc: Setup project
    cmds:
      - |
        lefthook install
    sources:
      - ./lefthook.yml
      - ./flake.nix
  formatter:rust:
    silent: true
    run: "once"
    desc: ðŸ’„Format rust files
    sources:
      - "**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
    cmds:
      - |
        cargo fix --allow-staged --allow-dirty --all-targets
      - |
        cargo fmt --all
      - |
        cargo clippy --fix --allow-dirty --allow-staged
      - |
        cargo-deny check
  formatter:nix:
    silent: true
    run: "once"
    desc: ðŸ’„Format nix files
    sources:
      - "**/*.nix"
    generates:
      - "**/*.nix"
    cmds:
      - |
        nix fmt
  formatter:
    silent: true
    desc: ðŸ’„Format jardin
    aliases:
      - fmt
    deps:
      - task: formatter:rust
      - task: formatter:nix
  lint:typos:
    silent: true
    cmds:
      - |
        typos --write-changes .
  lint:reuse:
    silent: true
    cmds:
      - reuse lint
  lint:cargo:
    silent: true
    cmds:
      - cargo fmt
  lint:yamlfmt:
    silent: true
    cmds:
      - yamlfmt -lint
  lint:
    silent: true
    desc: ðŸ’„Lint jardin
    deps:
      # - task: lint:rust:clippy
      - lint:yamlfmt
      - lint:typos
      - lint:reuse
  build:
    silent: true
    desc: Build jardin
    sources:
      - ./src/**/*.rs
      - ./Cargo.toml
      - ./Cargo.lock
    generates:
      - ./target/debug/jardin
    cmds:
      - |
        cargo build
  test:lefthook:
    silent: true
    cmds:
      - |
        lefthook -- run pre-commit pre-push
    sources:
      - "lefthook.yml"
  test:rust:unit:
    silent: true
    cmds:
      - |
        cargo llvm-cov nextest
    sources:
      - "**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
  test:rust:audit:
    silent: true
    run: "once"
    cmds:
      - |
        cargo audit
    sources:
      - "**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
  test:
    silent: true
    run: "once"
    desc: Run all development test toolchain
    cmds:
      - task: build
      - task: formatter
      - task: lint
      - task: test:rust
      - task: test:rust:audit
  dev:
    silent: true
    run: "once"
    desc: Run development mode
    cmds:
      - |
        task toolchain -- --watch
  debug:
    silent: true
    run: "once"
    desc: Run jardin in debug mode
    deps:
      - task: build
    cmds:
      - |
        ./target/debug/jardin -c jardin.toml deploy
  run:
    silent: true
    run: "once"
    desc: Run jardin
    cmds:
      - |
        nix run
  default:
    silent: true
    run: "once"
    cmds:
      - task: init
      - |
        task -l
